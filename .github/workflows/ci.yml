name: Java CI with Maven and Angular

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        
    - name: Build with Maven
      run: mvn -B package --file back/pom.xml
      
    - name: Run backend tests and generate Jacoco report
      run: mvn clean verify --file back/pom.xml
      
    - name: List files in target/classes directory
      run: ls -l back/target/classes

    - name: Upload backend build artifact
      uses: actions/upload-artifact@v4
      with:
        name: backend-target
        path: back/target

    - name: Build and Push Docker Image for Backend
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:${{ github.sha }} -f back/Dockerfile back
        echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        docker push ${{ secrets.DOCKER_USERNAME }}/backend:${{ github.sha }}

  build-frontend:
    needs: build-backend
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'  
        cache: 'npm'
        cache-dependency-path: 'front/package-lock.json'
        
    - name: Install Node.js dependencies
      run: npm install
      working-directory: ./front
      
    - name: Run frontend tests and generate coverage report
      run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadless --code-coverage
      working-directory: ./front
      
    - name: Build and Push Docker Image for Frontend
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:${{ github.sha }} -f front/Dockerfile front
        echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        docker push ${{ secrets.DOCKER_USERNAME }}/frontend:${{ github.sha }}

  quality-check:
     needs: [build-backend, build-frontend]
     runs-on: ubuntu-latest
     steps:
       - name: Checkout Repository
         uses: actions/checkout@v3
         with:
           fetch-depth: 0

       - name: Download backend build artifact
         uses: actions/download-artifact@v4
         with:
           name: backend-target
           path: back/target

       - name: List downloaded backend artifact
         run: ls -R back/target
         
       - name: Set up JDK 11
         uses: actions/setup-java@v3
         with:
           java-version: '11'
           distribution: 'adopt'
      
       - name: SonarCloud Scan
         uses: SonarSource/sonarcloud-github-action@v2
         with:
           projectBaseDir: .
         env:
           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
           SONAR_PROJECT_KEY: ludovicpeysson9_Gerez-un-projet-collaboratif-en-int-grant-une-demarche-CI-CD
           SONAR_ORGANIZATION: ludovicpeysson9
           SONAR_JAVA_BINARIES: back/target/target/classes

          
  upload-reports:
    needs: [build-backend, build-frontend]
    runs-on: ubuntu-latest
    steps:
    
      - name: Upload backend coverage report
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage-report
          path: back/target/site/jacoco/
        
      - name: Upload frontend coverage report
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage-report
          path: front/coverage/
